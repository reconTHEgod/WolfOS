--1.4.0_b6
--[[WolfOS is the intellectual property of James Chapman (toxic.wolf@hotmail.co.uk).
Please ask for permission before attempting to redistribute any code relating to WolfOS IN ANY FORM.]]--

--WolfOS Update

local bOnline = false

local sGitUser, sGitRepo, sGitBranch = "toxicwolf", "WolfOS", "master"
local sInstallPath = "/"
local sBlackList = [[
@installer
]]

local function printError(sError)
	WUI.clear("Control Panel")
	WUI.slowPrint("Error: " .. sError .. "\n\nPress any key to continue...")
	os.pullEvent("key")
	os.run({}, WDM.getSystemDir("control_panel") .. "main")
end

local s1, s2
local function redraw()
	WUI.clear("Control Panel")
	WUI.fastPrint(s1 .. "\n\n" .. s2)
end

local function installFile(sLocation, sPath, sName)
	sPath = string.gmatch(sPath, "os_files/([%w%_%.% %-%+%,%;%:%*%#%=%/]+)")()
	sDir = string.gmatch(sPath, "([%w%_%.% %-%+%,%;%:%*%#%=%/]+)/" .. sName .. "$")()
	if sDir ~= nil and not fs.isDir(sDir) then
		fs.makeDir(sDir)
	end
	if bOnline then s1 = "Downloading and updating file:" else s1 = "Updating file:" end
	s2 = "/" .. sPath
	redraw()
	local sData = nil
	if bOnline then
		sData = http.get(sLocation).readAll()
	else
		local hFile = fs.open(sLocation, "r")
		sData = hFile.readAll()
		hFile.close()
	end
	redraw()
	local hFile = fs.open(sPath, "w")
	hFile.write(sData)
	hFile.close()
end

local function getGitContents(sPath)
	local tType, tPath, tName = {}, {}, {}
	local sResponse = http.get("https://api.github.com/repos/"..sGitUser.."/"..sGitRepo.."/contents/"..sPath.."?ref="..sGitBranch)
	if sResponse then
		sResponse = sResponse.readAll()
		if sResponse ~= nil then
			for str in string.gmatch(sResponse, '"type":"(%w+)"') do table.insert(tType, str) end
			for str in string.gmatch(sResponse, '"path":"([^\"]+)"') do table.insert(tPath, str) end
			for str in string.gmatch(sResponse, '"name":"([^\"]+)"') do table.insert(tName, str) end
			return true, tType, tPath, tName
		end
	end
	return false, "Can't resolve URL"
end

local function isBlackListed(sPath)
	if string.gmatch(sBlackList, "@" .. sPath)() ~= nil then
		return true
	end
end

local function main(sPath)
	if bOnline then
		local bOk, p1, tPath, tName = getGitContents(sPath)
		if bOk then
			local tType = p1
			for i, sData in pairs(tType) do
				if sData == "file" then
					local checkPath = http.get("https://raw.github.com/"..sGitUser.."/"..sGitRepo.."/"..sGitBranch.."/"..tPath[i])
					if checkPath == nil then
						tPath[i] = tPath[i] .. "/" .. tName[i]
					end
					local _sPath = tPath[i]
					if sInstallPath ~= "" then _sPath = fs.combine(sInstallPath, tPath[i]) end
					if not isBlackListed(tPath[i]) then
						installFile("https://raw.github.com/"..sGitUser.."/"..sGitRepo.."/"..sGitBranch.."/"..tPath[i], _sPath, tName[i])
					end
				end
			end
			for i, sData in pairs(tType) do
				if sData == "dir" then
					main(tPath[i])
				end
			end
		else
			printError(p1)
		end
	else
		for i, _sPath in pairs(fs.list(sPath)) do
			if not fs.isDir(fs.combine(sPath, _sPath)) then
				if not isBlackListed(_sPath) then
					if sInstallPath ~= "" then _path = fs.combine(sInstallPath, string.sub(sPath, 6)) .. "/" .. _sPath end
					installFile(fs.combine(sPath, _sPath), _path, _sPath)
				end
			end
		end
		for i, _sPath in pairs(fs.list(sPath)) do
			if fs.isDir(fs.combine(sPath, _sPath)) then
				main(fs.combine(sPath, _sPath))
			end
		end
	end
end

local tChoices = {{["display"] = "Update WolfOS from disk", ["id"] = "offline", ["selectable"] = true}}
if http then
	local sSha = http.get("https://api.github.com/repos/"..sGitUser.."/"..sGitRepo.."/branches/"..sGitBranch)
	sSha = string.gmatch(sSha.readAll(), '"sha":"(%w+)"')()
	if sSha ~= WDM.readSystemData("sha") then
		table.insert(tChoices, 1, {["display"] = "Download and install WolfOS updates", ["id"] = "online", ["selectable"] = true})
	end
end
local sSelection = WUI.menu(tChoices, "System Update", "Control Panel", true)

if sSelection == "online" then bOnline = true end
if sSelection ~= "return" then
	local sSha = nil
	if bOnline then
		main("os_files")
		sSha = http.get("https://api.github.com/repos/"..sGitUser.."/"..sGitRepo.."/branches/"..sGitBranch)
		sSha = string.gmatch(sSha.readAll(), '"sha":"(%w+)"')()
	else
		main("disk/os_files")
	end
	local sVer = string.sub(WDM.readLine(WDM.getSystemDir("system") .. "shell", 1), 3)
	WDM.writeSystemData(sSha, "sha")
	WDM.writeSystemData(sVer, "version")
	
	WUI.clear("Control Panel")
	WUI.slowPrint("WolfOS " .. sVer .. " update is complete!\n")
	WUI.slowPrint("Press any key to continue...")
	os.pullEvent("key")
	os.shutdown()
end
os.run({}, WDM.getSystemDir("control_panel") .. "main")