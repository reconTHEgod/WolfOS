--1.4.0_b6
--[[WolfOS is the intellectual property of James Chapman (toxic.wolf@hotmail.co.uk).
Please ask for permission before attempting to redistribute any code relating to WolfOS IN ANY FORM.]]--

local tArgs = {...}
local tUser = tArgs[1]
local bMenuLoop = true

while bMenuLoop == true do
	local tChoices = {
		{["display"] = "Unique ID: " .. tUser.uid, ["selectable"] = false},
		{["display"] = "User Account ID: " .. tUser.name, ["selectable"] = false},
		{["display"] = "User Account Type: " .. string.upper(string.sub(tUser.type, 1, 1)) .. string.sub(tUser.type, 2), ["selectable"] = false},
		{["display"] = "", ["selectable"] = false},
		{["display"] = "Change User Account ID", ["id"] = "change_name", ["selectable"] = true},
		{["display"] = "Change Passcode", ["id"] = "change_pass", ["selectable"] = true},
		{["display"] = "Change User Account Type", ["id"] = "change_type", ["selectable"] = true},
		{["display"] = "Delete User Account", ["id"] = "del_user", ["selectable"] = true}
	}
	local tActions = {
		["change_name"] = function()
			local sUserInput = nil
			while true do
				WUI.clear("Control Panel")
				WUI.slowPrint("Please enter new User Account ID:", 1, 4)
				WUI.slowPrint(">", 1, 6)
				local t = WUI.getText({
					{["x"] = 3, ["y"] = 6, ["width"] = 16, ["height"] = 1, ["pattern"] = "[%w%.%-_]", ["hidden"] = false, ["editable"] = true, ["contents"] = {sUserInput}},
				})
				WUI.clear("Control Panel")
				if t then
					sUserInput = t[1]["contents"][1]
					if #sUserInput > 0 and not WAU.exists(sUserInput) then
						WAU.changeUserData(tUser.uid, "user", sUserInput)
						WUI.clear("Control Panel")
						WUI.slowPrint("User Account ID changed successfully!", nil, nil, true)
						break
					else
						if #sUserInput < 1 then
							WUI.slowPrint("User Account IDs must be between 1 and 16 characters!")
						end
						if WAU.exists(sUserInput) then
							WUI.slowPrint("User Account ID is already in use!")
						end
						sleep(1.5)
					end
				end
			end
		end,
		["change_pass"] = function()
			local sPassInput = nil
			while true do
				WUI.clear("Control Panel")
				WUI.slowPrint("Please enter new Passcode:", 1, 4)
				WUI.slowPrint(">", 1, 6)
				local t = WUI.getText({
					{["x"] = 3, ["y"] = 6, ["width"] = 16, ["height"] = 1, ["pattern"] = "%w", ["hidden"] = true, ["editable"] = true, ["contents"] = {sPassInput}},
				})
				WUI.clear("Control Panel")
				if t then
					sPassInput = t[1]["contents"][1]
					if #sPassInput > 7 then
						WAU.changeUserData(tUser.uid, "hash", hash.sha256(sPassInput))
						WUI.clear("Control Panel")
						WUI.slowPrint("Passcode successfully!", nil, nil, true)
						break
					else
						if #sPassInput < 1 then
							WUI.slowPrint("Passcodes must be between 8 and 16 characters!", nil, nil, true)
						end
					end
				end
			end
		end,
		["change_type"] = function()
			WUI.clear("Control Panel")
			if WUI.correctPass("Control Panel", true) then
				local tChoices = {
					{["display"] = "Admin", ["id"] = "admin", ["selectable"] = true},
					{["display"] = "User", ["id"] = "user", ["selectable"] = true}
				}
				local sNewType = WUI.menu(tChoices, "User Account Types", "Control Panel")
				WAU.changeUserData(tUser.uid, "type", sNewType)
				WUI.clear("Control Panel")
				WUI.slowPrint("User Account type changed successfully!", nil, nil, true)
			end
		end,
		["del_user"] = function()
			WUI.clear("Control Panel")
			if WUI.correctPass("Control Panel", true) then
				WUI.clear("Control Panel")
				if WUI.choiceMenu("Delete User Account?") then
					WAU.removeUser(tUser.uid)
					WUI.clear("Control Panel")
					WUI.slowPrint("User Account deleted successfully!", nil, nil, true)
					if tUser.uid == WDM.readSystemTemp("current_uid") then
						WUI.logout()
					end
				end
			end
		end,
		["return"] = function()
			bMenuLoop = false
			os.run({}, WDM.getSystemDir("control_panel") .. "user/main")
		end
	}
	local sSelection = WUI.menu(tChoices, "User", "Control Panel", true)
	tActions[sSelection]()
end