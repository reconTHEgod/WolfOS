--[[WolfOS is the intellectual property of James Chapman (toxic.wolf@hotmail.co.uk).
Please ask for permission before attempting to redistribute any code relating to WolfOS IN ANY FORM.]]--

if not os.getComputerLabel() then
	os.setComputerLabel("ID# " .. os.getComputerID())
end
print("Loading APIs...")
sleep(0.01)
local tAPIS = fs.list("/WolfOS/system/apis")
for n = 1, #tAPIS do
	os.loadAPI("/WolfOS/system/apis/" .. tAPIS[n])
end
print("Clearing temporary data...")
sleep(0.01)
WDM.clearTemp()
local sModemPort = WDM.readSystemData("modem_port")
if sModemPort then
	if WPH.getType(sModemPort) ~= "modem" then
		WDM.writeSystemData("\\", "modem_port")
	elseif WDM.readSystemData("modem_state") == "true" and WPH.getType(sModemPort) == "modem" then
		print("Initiating modem...")
		rednet.open(sModemPort)
	end
end
local sMonitorPort = WDM.readSystemData("monitor_port")
if sMonitorPort then
	if WPH.getType(sMonitorPort) ~= "monitor" then
		WDM.writeSystemData("\\", "monitor_port")
	elseif WDM.readSystemData("monitor_state") == "true" and WPH.getType(sMonitorPort) == "monitor" then
		print("Initiating monitor...")
		term.redirect(peripheral.wrap(sMonitorPort))
		if WDM.readSystemData("monitor_state") == "true" then
			print("Synchronising with monitor...")
			term.syncScreens(true)
		end
	end
end
print("Starting WolfOS...")
print("Loading User Interface...")
sleep(0.01)
WUI.bootScreen("Initiating WolfOS", "Please wait...")
local runOS = function()
	os.run({}, WDM.getSystemDir() .. "startupMenu")
end
local runClock = WUI.setupClock()
parallel.waitForAny(runOS, runClock)

sleep(1)
pcall( function()
	term.setCursorBlink( false )
	print( "Press any key to continue" )
	os.pullEvent( "key" ) 
end )
os.shutdown()